/* eslint-disable max-len */
export const en = {
  locale: 'en',
  dataMissing: 'ND',
  userName: 'User Name',
  documents: 'Documents',
  copyOf: 'Copy of',
  retry: 'Retry',
  hubSectionAvatarGroupSelector: { title: 'Who is authorized to see this item?' },
  buttons: {
    logout: 'Log out',
    save: 'Save',
    cancel: 'Cancel',
    edit: 'Edit',
    delete: 'Delete',
    submit: 'Submit',
    send: 'Send',
    update: 'Update',
    clickToEdit: 'Click to edit',
    complete: 'Mark as Complete',
    addTag: 'Add Tag',
    copy: 'Copy',
    extract: 'Extract',
    actions: 'Actions',
    multipleActions: 'Multiple Actions',
  },
  mainMenu: {
    title: 'Main Menu',
  },
  nav: {
    sidebar: {
      welcome: 'Welcome!!!',
      bye: 'See ya!',
    },
  },
  companySelector: {
    placeholder: 'Select a company',
  },
  map: {
    style: {
      streetDay: 'Day',
      streetNight: 'Night',
      satellite: 'Satellite',
    },
  },
  billing: {
    title: 'Finance',
    invoices: 'Invoices',
    emptyPageDescription: 'Nothing to show here yet',
    downloadPdf: 'View PDF',
    downloadXml: 'View XML',
    partialCreditNote: 'Partial Credit Note',
    paidWithoutComplement: 'Paid without Complement',
    cancelCfdi: 'Cancel Cfdi',
    cancelCfdiWithCreditNote: 'Cancel with credit note',
    sendCreationNotification: 'Notify creation',
    toolbars: {
      today: 'Today',
      week: 'Week',
      lastMonth: 'Previous month',
      thisMonth: 'This month',
      thisQuarter: 'Quarter',
      thisYear: 'Year',
      downloadBillingCsv: 'Billing',
      downloadPaymentsCsv: 'Payments',
      downloadContpaqCsv: 'Contpaq',
      downloadBillingCsvTooltip: 'Download invoices/credit notes list',
      downloadPaymentsCsvTooltip: 'Download payment proofs list',
      downloadContpaqCsvTooltip: 'Download Contpaq report',
      filters: 'Filters',
      downloadCsvs: 'Download CSV',
    },
  },
  billOfLading: {
    title: 'Shipment Hubs',
  },
  list: 'List',
  invoice: {
    title: 'Invoice details',
  },
  login: {
    title: 'Login',
    email: 'Email',
    emailPlaceholder: 'Provide a valid email',
    password: 'Password',
    passwordPlaceholder: 'Type your password',
    loginButton: 'Sign in',
    goToRecovery: 'Lost password?',
    goToSignUp: 'Create account',
    loggingIn: 'Please wait...',
    errors: {
      missingData: 'Email and password are required',
      userNotFound: 'User not found',
      invalidCredentials: 'Invalid credentials',
      accountNotVerified: 'Email account not verified',
      unexpected: 'Unexpected error',
    },
  },
  signup: {
    title: 'New account',
    username: 'Name',
    usernamePlaceholder: 'Your full name',
    email: 'Email',
    emailPlaceholder: 'Provide a valid email',
    password: 'Password',
    passwordPlaceholder: 'Type your password',
    signUpButton: 'Create account',
    goToRecovery: 'Lost password?',
    goToLogin: 'Already have an account?',
    signingUp: 'Working on it...',
    messages: {
      success: 'User account created. Please check your email and confirm the account creation.',
    },
    errors: {
      missingData: 'Please fill all the required fields',
      emailAlreadyUsed: 'Email already in use',
      usernameAlreadyUsed: 'Username already in use',
      unexpected: 'Unexpected error',
    },
  },
  verifyEmail: {
    title: 'Email verification',
    errors: {
      invalidToken: 'Invalid activation link',
      unexpected: 'Unexpected error',
    },
    messages: {
      verifyingEmail: 'Activating account...',
      success: 'Account activated',
      goBack: 'Go back',
    },
  },
  accountRecovery: {
    title: 'Account recovery',
    submitButton: 'Send email',
    goBack: 'Go back',
    goToLogin: 'Login',
    goToSignUp: 'Create account',
    fields: { email: 'Email', emailPlaceholder: 'Your email address' },
    messages: {
      success: 'Please check your email to proceed with the recovery process',
      sendingEmail: 'Sending...',
    },
    errors: {
      missingData: 'You must provide an email address',
      userNotFound: "The provided email doesn't have an account",
      unexpected: 'Unexpected error',
    },
  },
  passwordChange: {
    title: 'Change password',
    submitButton: 'Update',
    goToRecovery: 'Lost password?',
    goToLogin: 'Go to log in page',
    cancel: 'Cancel',
    fields: { newPassword: 'New password', repeatedPassword: 'Repeat password' },
    messages: {
      verifyingToken: 'Checking...',
      success: 'Password updated successfully',
    },
    errors: {
      invalidToken: 'Invalid link',
      invalidUserToken: 'Invalid link',
      missingData: 'Incomplete data',
      notMatch: "Passwords doesn't match",
      unexpected: 'Unexpected error',
    },
  },
  cfdiStatus: {
    active: 'Active',
    payed: 'Paid',
    partiallyPayed: 'Partially Paid',
    payedWithoutComplement: 'Paid (without Complement)',
    discounted: 'Discounted',
    totallyDiscounted: 'Discounted 100%',
    cancelPending: 'Canceled (Pending)',
    canceled: 'Canceled',
  },
  cfdiType: {
    invoice: 'Invoice',
    creditNote: 'Credit Note',
    paymentProof: 'Payment Proof',
    billOfLading: 'Bill of Lading',
  },
  errors: {
    databaseConnection: "Can't establish a connection with the database",
    unexpected: 'An unexpected error ocurred',
  },
  invoicesList: {
    errors: {
      invalidUser: 'Invalid user session.',
    },
  },
  newCfdi: {
    cfdiTypeTitle: {
      none: 'New Cfdi',
      invoice: 'New invoice',
      paymentProof: 'New payment',
      creditNote: 'New credit note',
      billOfLading: 'New bill of lading',
    },
    issuerReceiverStep: {
      title: 'Issuer/Receiver selection',
      issuer: 'Issuer',
      receiver: 'Receiver',
      issuerPlaceholder: 'Select an issuer',
      receiverPlaceholder: 'Select a receiver',
      billingPendingServices: 'Biling pending services:',
    },
    invoiceDetailsStep: {
      title: 'Detalles de la factura',
      currency: 'Currency',
      exchangeRate: 'Exchange rate',
      paymentMethod: 'Payment method',
      paymentType: 'Payment type',
      creditDays: 'Credit days',
      cfdiUse: 'Cfdi use',
      notes: 'Notes',
    },
    invoiceItemsStep: {
      services: 'Billing pending services',
      noBillingPendingServices: 'Billing pending services not found',
      servicePendingValue: 'Unbilled total',
      serviceOrigin: 'Origin',
      serviceDestination: 'Destination',
      serviceClientReference: 'Client reference',
      additionalItems: 'Additional items',
    },
    additionalItem: {
      productCode: 'Service',
      productCodePlaceholder: 'Select a service',
      unit: 'Unit',
      quantity: 'Quantity',
      unitValue: 'Unit value',
      subtotal: 'Subtotal',
      total: 'Total',
      tax: 'IVA',
      ivaRet: 'IVA Retention',
      notes: 'Notes',
      addItem: 'Add item',
      updateItem: 'Update item',
      deleteItem: 'Remove item',
      cancelEditItem: 'Cancelar',
      unitPlaceholder: 'Select a Unit Code',
    },
    paymentProofDetailsStep: {
      title: 'Payments',
      date: 'Payment date',
      paymentForm: 'Payment form',
      currency: 'Currency',
      exchangeRate: 'Exchange rate',
      receiverAccount: 'Receiver account',
      issuerAccount: 'Issuer account',
      operationNumber: 'Operation number',
      addPayment: 'Add payment',
      updatePayment: 'Update',
      deletePayment: 'Delete',
      cancelEditPayment: 'Cancel',
    },
    paymentProofInvoicesStep: {
      title: 'Payment invoices',
      pendingAmount: 'Amount',
      noAttachableInvoices: 'No attachable invoices available',
    },
    stepNames: {
      cfdiType: 'Cfdi type',
      issuerReceiver: 'Issuer/Receiver',
      cfdiDetails: 'Cfdi details',
      cfdiItems: 'Cfdi items',
      confirmation: 'Confirm',
    },
    nextStep: 'Next',
    previousStep: 'Previous',
    cancel: 'Cancel',
    saveDraft: 'Save',
    createSignedCfdi: 'Create Cfdi',
    startAgain: 'Create a new Cfdi',
    goToList: 'Go back to Cfdi list',
    messages: {
      cfdiCreated: 'Cfdi created successfully',
      cfdiDraftCreated: 'Cfdi draft saved',
    },
    errors: {
      issuerIdRequired: 'Select an issuer',
      receiverIdRequired: 'Select a receiver',
      currencyRequired: 'Select a currency',
      exchangeRateRequired: 'Exchange rate is required',
      paymentMethodRequired: 'Select the payment method',
      paymentTypeRequired: 'Select the payment type',
      creditDaysRequired: 'The credit days must be specified',
      cfdiUseRequired: 'Cfdi use is required',
      itemsRequired: 'At least one item is required',
      productCodeRequired: 'Product code required',
      unitRequired: 'Unit required',
      invalidQuantity: 'Invalid quantity',
      invalidUnitValue: 'Invalid unit value',
      paymentDateRequired: 'Payment date is required',
      paymentFormRequired: 'Select a payment method',
      paymentsRequired: 'Add at least one payment',
    },
    billOfLadingDetailsStep: {
      title: 'Bill of Lading Details',
      typeOfBillOfLading: 'Type of Bill of Lading',
      income: 'Income',
      transfer: 'Transfer',
    },
  },
  createCfdi: {
    messages: {
      success: 'Cfdi created successfully',
    },
    errors: {
      apiSignError: 'An error ocurred during the Cfdi signing process',
      cfdiSigningInProgress: 'Another Cfdi is being signed. Try again in a moment.',
      userUnauthorized: "The user can't create this kind of Cfdis",
    },
  },
  cancelCfdi: {
    errors: {
      cfdiNotFound: 'Invalid user',
      userCantCancelCfdis: "User can't cancel Cfdis",
      apiError: 'Unexpected error trying to cancel the Cfdi. Try again later.',
      hasPaymentProof: "The invoice is related to a payment proof and can't be canceled",
    },
  },
  getCfdiXml: {
    errors: {
      failToRetrieveFromApi: 'Error retrieving the XML from the billing provider',
    },
  },
  notifyCfdiCreation: {
    errors: {
      cfdiNotFound: 'The specified Cfdi was not found',
      notificationAlreadyStarted: 'Notification process already started',
      unexpectedError: 'An unexpected error has occurred in the new Cfdi email notification process.',
    },
    messages: {
      missingConfig:
        'The required configuration to notify the Cfdi creation is not complete. See the service relationship between issuer and receiver.',
      noRecipients: 'There is no recipients on the services relationship to send this notification.',
      notificationsSent: 'The Cfdi creation notification was sent.',
    },
  },
  billingApi: {
    errors: {
      accessError: ' Error trying to access to the Cfdi signing service. Please try again later.',
    },
  },
  totalType: {
    invoiced: 'Total Invoiced',
    credited: 'Total Credited',
    paid: 'Total Paid',
  },
  cfdiCard: {
    status: {
      cash: 'Paid in cash',
      due: 'Due',
    },
    details: {
      shipments: 'Shipments',
      cfdiDate: 'Issued Date',
    },
    modal: {
      title: 'Partial Credit Note',
      instruction1: 'Create a partial Credit Note from the current Invoice ',
      instruction2: 'The amount of the Credit Note must be less than the Invoice amount: ',
      question: 'What is the amount of the Partial Credit Note?',
      amount: 'Amount',
      currency: 'Currency',
      taxes: 'Taxes',
      vat: 'VAT',
      vatRetention: 'VAT-R',
      total: 'Total',
      ok: 'Create',
      cancel: 'Cancel',
      errors: {
        amount: 'Please include the amount of the Partial Credit Note. It has to be lower than the total amount of the invoice.',
        currency: 'Please select a valid currency. It is required to generate the Partial Credit Note',
      },
    },
  },
  all: 'All',
  newQuote: {
    title: 'New Quote',
    subtitle: 'Follow the steps',
    steps: {
      route: 'Route',
      origin: 'Origin',
      destination: 'Destination',
      appointmentId: 'Appointment ID',
      typeOfLoad: 'Load',
      Medium: 'Medium',
      additional: 'Additionals',
      routeQuestion: 'What is the route?',
      loadQuestion: 'What are you shipping?',
      detailsTitle: 'Details of the Service',
      transportMedium: 'Transport Medium',
      additionalServices: 'Additional Services',
      contactInfo: 'Contact Information',
      thanks: 'Thank You',
      back: 'Back',
      next: 'Next',
      end: 'Finish',
      pickupPlace: 'Pickup Place',
      pickupWindow: 'Pickup Window',
      deliveryPlace: 'Delivery Place',
      deliveryWindow: 'Delivery Window',
      newPlace: 'Add new place',
      loadType: 'Load Type',
      loadDimensions: 'Load Dimensions',
      loadDescription: 'Brief Description',
      loadCategory: 'Load Category',
      loadCategories: {
        general: 'General',
        bulk: 'Bulk',
        perishable: 'Perishable',
        fragile: 'Fragile',
        hazardous: 'Hazardous Material',
      },
      hazardousCategory: 'Type of Hazardous Material',
      hazardousCategories: {
        explosives: 'Explosives',
        gases: 'Gases',
        flamableLiquids: 'Flamable Liquids',
        flamableSolids: 'Flamable Solids',
        oxidizingSubstances: 'Oxidizing Substances',
        toxicAndInfectious: 'Toxic / Infeccious Substances',
        radioactiveMaterial: 'Radiactive Material',
        corrosiveSubstances: 'Corrosive Substances',
        otherDangerousObjects: 'Other Hazardous Substances or Objects',
      },
      weight: 'Weight',
      weightUnits: {
        g: 'g',
        tonMetric: 't (Metric)',
        kg: 'kg',
        lb: 'lb',
        cwtUK: 'cwt (UK)',
        cwtUS: 'cwt (US)',
        tonUK: 't (UK)',
        tonUS: 't (US)',
      },
      dimensions: 'Dimensiones',
      dimensionUnits: {
        cm: 'cm',
        m: 'm',
        inches: 'inches',
        ft: 'ft',
        yd: 'yd',
      },
      volume: 'Volume',
      volumeUnits: {
        ml: 'ml',
        l: 'l',
        oz: 'oz',
        galUK: 'gal (UK)',
        galUS: 'gal (US)',
      },
      height: 'Height',
      width: 'Width',
      lenght: 'Lenght',
      details: 'Details',
      geographicalLevel: 'Geographical Level',
      typeOfService: 'Type of Service',
      typeOfTrip: 'Type of Trip',
      export: 'Export',
      import: 'Import',
      national: 'National',
      regional: 'Regional',
      local: 'Local',
      oneWay: 'One Way',
      roundTrip: 'Round Trip',
      normal: 'Normal',
      expedited: 'Expedited',
      spot: 'Spot',
      project: 'Project',
      urgency: 'Urgency',
      recurrence: 'Recurrence',
      recurrenceUnits: {
        perDay: 'per Day',
        perWeek: 'per Week',
        perMonth: 'per Month',
        perQuarter: 'per Quarter',
        perYear: 'per Year',
      },
      modeOfTransport: 'Mode of Transport',
      selectMode: 'Select Mode',
      land: 'Land',
      sea: 'Sea',
      air: 'Air',
      train: 'Rail',
      multi: 'Intermodal',
      landContainer: 'Land Trailer',
      seaContainer: 'Sea Container',
      airContainer: 'Air Container',
      trainContainer: 'Rail Car',
      landContainers: {
        threeAndHalf: '3 1/2 ton',
        oneAxis: '1 Axis',
        twoAxis: '2 Axis',
        dryTrailer48: 'Dry Trailer 48"',
        dryTrailer53: 'Dry Trailer 53"',
        double: 'Double Trailer',
        refrigerated: 'Refrigerated',
        tank: 'Tank',
        gondola: 'Gondola',
        cattleCage: 'Cattle Cage',
        linedCage: 'Lined Cage',
        platform: 'Platform',
        lowBoy: 'Low Boy',
        hopper: 'Hopper',
        singleCarCarrier: '1 Level Car Carrier',
        multiCarCarrier: '2 Levels Car Carrier',
      },
      seaContainers: {
        dryVan: 'Dry Van',
        highCube: 'High Cube',
        openTop: 'Open Top',
        openSide: 'Open Side',
        flatRack: 'Flat Rack',
        tank: 'Tank',
        refrigerated: 'Refrigerated',
      },
      seaContainersSize: {
        ten: '10"',
        twenty: '20"',
        thirty: '30"',
        fourty: '40"',
      },
      airContainers: {
        palletPIPoPAG: 'Pallet PIP | PAG',
        palletPGPoPMC: 'Pallet PGP | PMC',
        palletPGA: 'Pallet PGA',
        containerLD3oAKEoAVE: 'Container LD3 | AKE | AVE',
        containerLD9oAAP: 'Container LD9 | AAP',
        containerM1oAMA: 'Container M1 | AMA',
        containerM6oACA: 'Container M6 | ACA',
      },
      trainContainers: {
        autorack: 'Autorack',
        boxcar: 'Boxcar',
        centerbeam: 'Centerbeam',
        coveredHopper: 'Covered Hopper',
        coilCar: 'Coil Car',
        flatCar: 'Flat Car',
        gondola: 'Gondola',
        intermodal: 'Intermodal',
        refrigeretedBoxCar: 'Refrigereted Boxcar',
        openTopHopper: 'Open-top Hopper',
        tankCar: 'Tank Car',
        wellCar: 'Well Car',
      },
      suggestMe: 'Suggest me an option',
      numberOfShipments: 'Number of Shipments',
      thanksImage: 'http://urbicovers.com/wp-content/uploads/2019/10/gracias-letras_1262-6963.jpg',
      assignMessage: 'Has been assign to your request. You will receive an answer from him shortly.',
      customs: 'Customs',
      inspection: 'Inspection',
      warehouse: 'Warehouse',
      insurance: 'Insurance',
      name: 'Name',
      lastName: 'Last Name',
      email: 'Email',
      phoneNumber: 'Mobile',
      companyName: 'Company Name',
      modeImages: {
        land: 'https://www.airseacargo.mx/images/blog/Tipos_de_camiones_de_carga_para_el_transporte_terrestre.png',
        sea: 'https://www.leschaco.com/fileadmin/leschaco/templates/base_templates/img/neue_Bildwelt_Leschaco/Bildvorschlaege/leschaco_logistics_sea_freight_gobal_fcl_lcl_projects_special_equipment_export_import_nvocc.png',
        air: 'https://eturbonews.com/wp-content/uploads/2020/04/0a1-3.jpg',
        train: 'https://s29755.pcdn.co/wp-content/uploads/2019/01/FlashbackFriday-ICC-NewLocomotive.jpg',
        multi: 'https://ifa-forwarding.net/blog/wp-content/uploads/2019/01/1312_intermodaltransport_image-o_20160314161720.jpg',
      },
    },
  },
  users: {
    title: 'Users',
    errorDuringOperation: 'An error has ocurred during the operation.',
    emptyPageDescription: 'Empty page',
    status: {
      placeholder: 'Status',
      active: 'Active',
      disabled: 'Disabled',
    },
    role: {
      placeholder: 'Role',
      generalManager: 'General Manager',
      manager: 'Manager',
      user: 'User',
      accounting: 'Accounting',
      customerService: 'Customer Service',
    },
    subtitle: 'List of users',
    editUser: 'Edit User',
    viewDetails: 'User Details',
    enableUser: 'Enable user',
    disableUser: 'Disable user',
    deleteUser: 'Delete user',
    deleteUserMessage: 'Delete user',
    deleteUserDetail:
      "Deleting the user will erase the user's information permanenty.\nBut it will not affect the shipments data or any other information related with the user's activity inside Taskility.",
    position: 'Add Job Description',
    mobile: 'Add Mobile Phone',
    type: {
      companyManager: 'Company Manager',
      manager: 'Manager',
      customerService: 'Customer Service',
      accounting: 'Accounting',
    },
  },
  quotes: {
    title: 'Quotes',
  },
  settings: {
    title: 'Settings',
  },
  help: {
    title: 'Help',
  },
  delete: 'Delete',
  cancel: 'Cancel',
  yes: 'Yes',
  no: 'No',
  maybe: 'Maybe',
  newPlace: {
    title: 'New Place',
    searchAddress: 'Search Address',
    address: 'Address',
    googleMapsResults: 'Google Maps Results',
    placeName: 'New Place Name',
    country: 'Country',
    postalCode: 'ZIP Code',
    state: 'State',
    municipality: 'Municipality',
    locality: 'Locality',
    suburb: 'Suburb',
    street: 'Street',
    exteriorNumber: 'Exterior Number',
    interiorNumber: 'Interior Number',
    specifications: 'Specifications',
    typeOfPlace: 'Type of Place',
    warehouse: 'Warehouse',
    factory: 'Factory',
    distributionCenter: 'Distribution Center',
    retailStore: 'Retail Store',
    yard: 'Yard',
    tollBooth: 'Toll Booth',
    officeBuilding: 'Office Building',
    airport: 'Airport',
    seaport: 'Seaport',
    other: 'Other',
    appointmentRequired: 'An appointment is required?',
    safetyRequirements: 'Safety Requirements',
  },
  rfcValidation: {
    genericNational: 'Valid generic RFC used in operations with general public.',
    genericInternational: 'Valid generic RFC used in operations with foreign residents not registered in the Mexican Fiscal System.',
    valid: 'Valid RFC with correct verification digit.',
    invalid: 'Invalid RFC format. It must have 12 or 13 characters.',
    invalidDigit: 'Invalid RFC. The verification digit is incorrect.',
  },
  pedimentoValidation: {
    lenght15Digits: 'Invalid pedimento format. The pedimento number must have 15 digits.',
    validationYearIncorrect: 'Invalid validation year (digits 1 and 2). Must be lower or equal than current year.',
    customNumberIncorrect: 'Invalid custom number (digits 3 and 4). Must be a valid custom number according to SAT catalogue.',
    patentNumberIncorrect:
      'Invalid custom agent patent number (digits 5 to 8). Must be a valid custom agent patent number according to SAT catalogue.',
    excerciseYearIncorrect: 'Invalid year of the excercise (digit 9). Must be the last digit of the current or last year.',
    progressiveNumberIncorrect: 'Invalid progressive number (digits 10 to 15). Must be a number between 1 and 999999.',
  },
  newBillOfLadingHub: {
    hubsSelected: 'Hubs Selected',
    billOfLandingHubs: 'Shipment Hubs',
    hubObjective: 'Taskility Objective in the Hub',
    hubObjectiveDescription: 'What do you need Taskility to atuomatically do when all the information in the Hub is complete?',
    stampBoL: 'Stamp the Bill of Lading',
    stampBoLDescription: 'Stamp the Bill of Lading and email it to the team.',
    stampBoLIncome: 'Stamp the Income Bill of Lading',
    stampBoLIncomeDescription: 'Stamp the Income Bill of Lading and email it to the team.',
    stampBoLTransport: 'Stamp the Transport Bill of Lading',
    stampBoLTransportDescription: 'Stamp the Transport Bill of Lading and email it to the team.',
    sendBoLInfo: 'Email the data to the carrier',
    sendBoLInfoDescription: 'Email the complete data to the carrier so they can stamp the Bill of Lading on their system. When the ',
    hubOptions: 'Options',
    profitability: {
      title: 'Profitability',
      totalMargin: 'Total Margin',
      totalPrice: 'Total Price',
      totalCost: 'Total Cost',
    },
    tags: {
      Shipment: 'Shipment',
      shipment: 'Shipment',
      purchaseOrder: 'Purchase Order',
      customerReference: 'Customer Reference',
      category: 'Category',
      keyword: 'Keyword',
      other: 'Otro',
    },
    newTag: {
      title: 'New Tag',
      editTitle: 'Edit Tag',
      description:
        'You can use tags to make the Hub identification easier for all the people involved. The tags can be other shipment identification numbers, purchase orders, classification categories or keywords.',
      type: 'Type of Tag',
      value: 'Value',
    },
    submit: 'Submit',
    stamp: 'Stamp BoL',
    title: 'New Shipment Hub',
    team: {
      title: 'Team',
      formDescription:
        'Taskility is built to be collaborative. In this section, you can add members to the team and assign pemisions and responsibilities to securely share the other sections of the Bill of Lading form. This way, each one works at its own pace, but everyone is in synchrony.',
      accessSettings: 'Access Settings',
      privateAccess: 'Private Access',
      privateAccessDescription: 'Available to invited people. Including people outside my organization.',
      organizationAccess: 'Organization Access',
      organizationAccessDescription: 'Only available to invited people inside my organization.',
      invite: 'Invite',
      invitePlaceholder: 'Email',
      share: 'Share',
      sharedWith: 'Shared With',
      copyLink: 'Copy Link',
      copyDescription: 'Make sure to invite and give the proper permisions to the users before you share the link.',
      notificationsRecipientsLeft: 'Notifications Recipients Left',
      notificationsRecipient: 'Notify',
      readingPermisions: 'Reading Permissions',
      writingPermisions: 'Writing Permissions',
      hubManager: 'Hub Manager',
      userDeletedMessage: 'User Deleted',
      userNotDeletedMessage: 'User Not Deleted',
      deleteUserConfirmation: 'Do you want to delete this user?',
      english: 'English',
      spanish: 'Spanish',
      preferedLanguage: 'Prefered language for notifications',
      language: 'Language',
    },
    newBoLH: {
      title: 'New Shipment Hub',
      description: 'Create a Shipment Hub to easily gather the required information.',
      name: 'Name',
      namePlaceholder: 'Name to identify the Shipment Hub',
      createShipment: 'New Shipment',
      createShipmentDetail: 'Do you want to create a new shipment at the same time the Shipment Hub?',
      createShipmentCheckbox: 'Create a new shipment along with the Hub',
      customer: 'Customer',
      customerPlaceholder: 'Select a customer',
    },
    pendingActions: {
      title: 'Pending Actions',
      successTitle: 'Information Complete',
      successDescription: 'If you need to make a change just use the Edit button on each section',
      generalInfoIncomplete: '| Complete General Information section    \n',
      locationsIncomplete: '| Complete Locations section    \n',
      goodsIncomplete: '| Complete Goods section    \n',
      customsIncomplete: '| Complete Customs section    \n',
      transportsIncomplete: '| Complete Transports section    \n',
    },
    generalInfo: {
      title: 'General Info',
      description: 'Information about the type of shipment',
      international: 'Is the shipment international?',
      impoExpo: 'Is it an import or an export?',
      countryOfOrigin: 'Which is the country of origin?',
      countryOfDestination: 'Which is the country of destination?',
      viaOfEntry: 'What is the via of entry to the country?',
      viaOfExit: 'What is the via of exit of the country?',
      yes: 'Yes',
      no: 'No',
      import: 'Import',
      export: 'Export',
      USA: 'United States of America',
      MEX: 'México',
      CAN: 'Canada',
      autotransport: 'Land',
      maritime: 'Sea',
      air: 'Air',
      rail: 'Rail',
    },
    locations: {
      title: 'Locations',
      description: 'Include all origin and destination locations in the route.',
      addLocation: 'Add Location',
    },
    newLocation: {
      title: 'New Location',
      editTitle: 'Edit Location',
      description: 'Describe as detail as possible the information about the new location.',
      type: 'Type of Location',
      locationId: 'Location ID',
      sender: 'Sender',
      recipient: 'Recipient',
      rfc: 'RFC',
      name: 'Name RFC',
      freignTaxId: 'Foreign Tax Id',
      fiscalResidence: 'Fiscal Residence',
      departure: 'Departure',
      arrival: 'Arrival',
      date: 'Date',
      address: 'Address',
      origin: 'Origin',
      destination: 'Destination',
      searchPlace: 'Search a place in the database',
      newPlace: 'Add a new place',
      places: 'Places',
      noResults: 'No results found',
      clear: 'Clear selection',
      locationDeletedMessage: 'Location Deleted',
      locationNotDeletedMessage: 'Location Not Deleted',
      deleteLocationConfirmation: 'Do you want to delete this location?',
    },
    newCompany: {
      title: 'New Company',
      description: 'Add the minimum data to create a new company.',
      companies: 'Companies',
      searchCompany: 'Search Company',
      newCompany: 'New Company',
    },
    newDocument: {
      title: 'Upload New Document',
      editTitle: 'Edit Uploaded Document',
      description: 'On this section you can upload Invoices, Bill of Ladings (BoL) and Proofs of Delivery (PoDs)',
      type: 'Type of Document',
      cfdiInvoice: 'CFDI Invoice',
      cfdiInvoiceWithBol: 'CFDI Invoice with Bill of Lading',
      cfdiTransportWithBol: 'CFDI Transport with Bill of Lading',
      thirdPartyCfdiInvoiceWithBol: 'Third Party CFDI Income with Bill of Lading',
      invoice: 'Foreign Invoice',
      proofOfDelivery: 'Proof of Delivery',
      dateOfInvoice: 'Date of the Invoice',
      folio: 'Folio of the Invoice',
      costs: 'Costs',
      currency: 'Currency',
      nationalFreight: 'National Freight Cost',
      foreignFreight: 'Foreign Freight Cost',
      borderCross: 'Border Cross Cost',
      extra: 'Extra Cost',
      subtotal: 'Subtotal',
      tax: 'Tax',
      taxRetention: 'Tax Retention',
      total: 'Total',
      costsTotals: 'Costs Totals',
      uploadDocument: 'Upload Document',
      extract: 'Extract',
      exchangeRate: 'Exchange Rate',

      extractDetail: 'Extract data from CFDI XML',
      noneExtractableData: 'Non Extractable Cost Data',
      extractedData: 'Extracted Cost Data',
      costsExtractedFromXML: 'Taskility successfuly extracted the costs from XML',
      rememberXml: 'Remember to upload the PDF and XML files of the CFDI on this section',
    },
    costs: {
      title: 'Costs',
      description: 'All the costs associated to this shipment',
      addItem: 'Add Item',
      company: 'Company',
      folio: 'Folio',
      currency: 'Currency',
      subtotal: 'Subtotal',
      tax: 'Tax',
      taxRetention: 'Tax Retention',
      total: 'Total',
    },
    newTransport: {
      title: 'New Transport',
      editTitle: 'Edit Transport',
      description: 'Describe the means of transportation used in the shipment',
      type: 'Means of Transportation',
      land: 'Land',
      sea: 'Sea',
      air: 'Air',
      rail: 'Rail',
      pipe: 'Pipe',
      typeSCTPermit: 'Type of SCT Permit',
      SCTPermit: 'SCT Permit Number',
      vehicle: 'Vehicle',
      typeVehicle: 'Type Vehicle',
      licensePlate: 'License Plate',
      modelYear: 'Model Year',
      trailer: 'Trailer',
      typeTrailer: 'Type Trailer',
      driver: 'Driver',
      rfc: 'RFC',
      license: 'Driver License',
      name: 'Name',
      company: 'Company',
      companyDescription:
        'Select the Company that will perform this part of the shipment. All assets (vehicles, trailers, drivers, etc) selected or created in this part will be atuomátically associated with the selected company.',
      typeOfVehicleSAT: 'Type of Vehicle SAT',
      typeOfTrailerSAT: 'Type of Trailer SAT',
      transportDeletedMessage: 'Transport Deleted',
      transportNotDeletedMessage: 'Transport Not Deleted',
      deleteTransportConfirmation: 'Do you want to delete this transport?',
      detailTitle: 'Detail',
    },
    newVehicle: {
      title: 'New Vehicle',
      description: 'Add the data to generate a new vehicle.',
      vehicle: 'Vehicle',
      searchVehicles: 'Search Vehicles',
      newVehicle: 'New Vehicle',
      vehicles: 'Vehicles',
      truck: 'Trucks',
      trailer: 'Trailers',
      type: 'Type of Vehicle',
      economicNumber: 'Economic Number',
      licensePlate: 'License Plate',
      brand: 'Brand',
      insuranceCR: 'Civil Responsibility Insurance',
      insuranceEP: 'Environmental Damage Insurance',
      insuranceLoad: 'Load Insurance',
      insuranceCompany: 'Insurance Company',
      insurancePolicy: 'Insurance Policy',
      inssuredAmount: 'Inssured Ammount',
      identification: 'Identification Information',
      sctInformation: 'SCT Information',
    },
    newDriver: {
      title: 'New Driver',
      description: 'Add the data to generate a new driver.',
      driver: 'Driver',
      searchDrivers: 'Search Drivers',
      newDriver: 'New Driver',
      drivers: 'Drivers',
      email: 'Email',
      phoneNumber: 'Mobile Phone',
    },
    goods: {
      title: 'Goods',
      description: 'Include all goods transported in the shipment.',
      addMilestone: 'Add Item',
      totalWeight: 'Total Weight',
      totalItems: '# Items',
      items: 'Items',
      satCode: 'SAT Code',
      weight: 'Weight',
      value: 'Value',
      packaging: 'Packaging',
      dangerousMaterial: 'Dangerous Material',
      dangerousMaterialCode: 'DM Code',
      Sí: 'Yes',
      No: 'No',
      dimensions: 'Dimensions ( L/H/W )',
      unitCode: 'Unit Code',
      fraccionArancelaria: 'Fraccion Arancelaria',
      pedimentos: 'Pedimento',
      details: 'Details',
      customs: 'Customs',
      loadXML: 'Load XML',
      importFromXML: 'Import from XML',
      productNumber: 'Product Number',
      itemsAddedSuccessfullyFromXML: 'New Items were successfully added',
    },
    newItem: {
      title: 'New Item',
      editTitle: 'Edit Item',
      description: 'Select the quantity and product to add to the load.',
      companyDescription:
        'Select the Company that will send the items in the shipment. All products selected or created in this part will be atuomátically associated with the selected company.',
      product: 'Product',
      quantity: 'Quantity',
      pedimento: 'Pedimento',
      packagingCode: 'Packaging Code',
      packagingDescription: 'Packaging Description',
      packaging: 'Packaging',
      itemDeletedMessage: 'Item Deleted',
      itemNotDeletedMessage: 'Item Not Deleted',
      deleteItemConfirmation: 'Do you want to delete this item?',
      addType: 'How do you want to add the goods?',
      addSingleItem: 'Single item',
      addMultipleItemsFromXML: 'Multiple items from existing CFDI ',
      addMultipleItemsFromExcel: 'Multiple items from Excel Template',
      cfdiInvoice: 'CFDI Invoice',
      cfdiWithBol: 'CFDI with Bill of Lading',
      extractDetail: 'Extract Goods data from CFDI XML',
      goodsExtractedFromXML: 'Succesfully extracted goods from CFDI XML',
      extractedData: 'Extracted Goods Data',
      totalWeight: 'Total Weight',
      totalGoods: 'Total Items',
    },
    newProduct: {
      title: 'New Product',
      description: 'Add the information of register a new product',
      searchProducts: 'Search Products',
      newProduct: 'New Product',
      productDetails: 'Product Details',
      productCode: 'Product Number',
      productDescription: 'Product Description',
      unitaryPrice: 'Unitary Price',
      value: 'Value',
      currency: 'Currency',
      satProductCode: 'SAT Product Code',
      satUnitKey: 'SAT Unit Key',
      satCodes: 'SAT Codes',
      dimensions: 'Dimensions',
      cm: 'cm',
      plg: 'plg',
      width: 'Width',
      height: 'Height',
      depth: 'Depth',
      weightInKg: 'Weight in Kg',
      unitMeasure: 'Unit Measure',
      unit: 'Unit',
      yes: 'Yes',
      no: 'No',
      specificData: 'Specific Data',
      dangerousMaterial: 'Is a DangerousMaterial?',
      dangerousMaterialCode: 'Dangerous Material Code',
      fraccionArancelaria: 'Fracción Arancelaria',
      products: 'Products',
    },
    transport: {
      title: 'Transport',
      description: 'Include details about the means of transport in the route',
      addTransport: 'Add Transport',
      autotransport: 'Land',
      SCTPermit: 'Type of SCT Permit',
      numSCTPermit: 'SCT Permit Number',
      vehicleIdentification: 'Vehicle Identification',
      vehicleConfiguration: 'Vehicle Configuration',
      licensePlate: 'License Plate',
      yearAndModel: 'Year and Model',
      trailers: 'Trailers',
      trailerType: 'TrailerType',
      insurance: 'Insurance',
      civilResponsibility: 'Civil Responsibility',
      environmentalProtection: 'Environmental Protection',
      load: 'Load Insurance',
      prime: 'Prime amount',
      insuranceCompany: 'Insurance Company',
      insurancePolicy: 'Policy',
      typeOfFigure: {
        typeOfFigure: 'Type',
        RFC: 'RFC',
        licenseNumber: 'License',
        name: 'Name',
      },
      driver: 'Driver',
      sct: 'SCT Permit',
      stamp: 'Stamp',
      vehicleNumber: 'Number',
      trailerNumber: 'Number',
      detail: 'Detalle',
      taskilityObjective: 'Taskility will help you to ',
      stampBolIncome: 'stamp a Income CFDI with Bill of Lading',
      stampBolTransport: 'stamp a Transport CFDI with Bill of Lading',
      sendBolData: 'send the Hub Data to the Carrier',
    },
    satCodes: {
      productAndServices: 'Product and Services Codes',
      searchSatProductCodes: 'Search by description or SAT product code',
      dangerous: 'Dangerous',
      notDangerous: 'Not Dangerous',
      possibleDangerous: 'Possible Dangerous',
      productCodePossibleDangerousMaterial:
        'The selected SAT Product Code is classified as a possible dangerous material. Therefore the Dangerous Material field is required.',
      productCodeIsDangerousMaterial:
        'The selected SAT Product Code is classified as a dangerous material. Therefore the Dangerous Material and the Dangerous Material Code fields are required.',
      searchTariffCodes: 'Search by description, tariff code or UMT',
      tariffCodes: 'Tariff Codes',
      searchDangerousMaterialCodes: 'Search by description, dangerous material code or class',
      dangerousMaterialCodes: 'Dangerous Material Codes',
    },

    route: {
      title: 'Route',
      description: 'Include all milestones in the route.',
      addTransport: 'Add Milestone',
    },
    load: {
      title: 'Load',
      description: 'Include all the product items included in the shipment load.',
      addItem: 'Add Item',
    },
    customs: {
      title: 'Customs',
      description: 'Include the Customs Request information ',
      placeholder: 'Add Customs Request number',
    },
    prices: {
      title: 'Freight Prices',
      description: 'Include all the freight prices.',
      addItem: 'Add Item',
      product: 'Product',
      productDescription: 'Description',
      quantity: 'Qty.',
      unitCode: 'Unit Code',
      currency: 'Currency',
      unitaryValue: 'Unitary Value',
      subtotal: 'Subtotal',
      tax: 'Tax',
      taxRetention: 'Tax Retention',
      total: 'Total',
    },
    documents: {
      title: 'Documents',
      description: 'Upload XML or PDF documents related to the BoL.',
      placeholder: 'Select documents',
      upload: 'Upload',
    },
    logs: {
      title: 'Event Logs',
      description: 'Here you can find relevant events about the collaboration of the teammates.',
    },
    toolbars: {
      downloadOperationsCsvButton: 'Operations',
      downloadOperationsCsvTooltip: 'Download the operations report in Csv format. Compatible with excel.',
      downloadProfitCsvButton: 'Profit',
      downloadProfitCsvTooltip: 'Download the profit report in Csv format. Compatible with excel.',
      downloadContpaqTxtButton: 'Contpaq (txt)',
      downloadContpaqTxtTooltip: 'Download the Contpaq report in txt format. Compatible to import to Conpaq.',
    },
    multipleHubsCopiedMessage: 'Hubs have been copied',
  },
  tracking: {
    title: 'Shipment Tracking',
    shipmentId: 'Shipment Id',
    driversStartInstructions:
      'To start the trip click the Start Tracking button and accept the prompt asking your permission to share your location.',
    driversStopInstructions: 'When you arrive to the destination, press the Stop Tracking Button.',
    stopTracking: 'Stop Tracking',
    startTracking: 'Start Tracking',
    lastPosition: 'Last Position',
  },
  customers: {
    title: 'Customers',
    company: 'Company',
    taxId: 'Tax Id',
    name: 'Legal Name',
    cfdiUse: 'Invoice Use',
    fiscalRegime: 'Fiscal Regime',
    zipCode: 'Zip Code',
    fiscalResidenceCountry: 'Fiscal Residence Country',
    foreignTaxId: 'Foreign Tax Id',
    requiredFieldsForForeigners: 'Required data only for foreign customers',
    rfcMessage: 'The RFC is required',
    nameMessage: 'The Legal Name of the company is required, in uppercase and without the incorporation initials.',
    cfdiUseMessage: 'The correct code acording to the SAT catalog is required',
    fiscalRegimeMessage: 'The correct code acording to the SAT catalog is required',
    zipCodeMessage: 'The Zip Code is a required field. According to the SAT catalog',
    fiscalResidenceCountryMessage: 'Fiscal Residence Country is a required field. It is the country were the company is registered',
    foreignTaxIdMessage: 'Foreign Tax Id is required. It is the Tax Id of the company in their country if residence, without separation or dashes',
    companyData: 'Company',
    businessRelationshipData: 'Service Agreement',
  },
}

export const enPlurals = {
  orders: '%{smart_count} order |||| %{smart_count} orders',
}
